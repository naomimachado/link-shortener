package com.link.shorten.helpers;

import java.nio.ByteBuffer;
import java.security.MessageDigest;
import java.security.NoSuchAlgorithmException;
import java.util.HashMap;

import javax.xml.bind.DatatypeConverter;

public class LinkHash {
	
	static HashMap<String, String> dictionary = new HashMap<>();
	
	public String getHash(String link) {
		
		String hash = null;
		String newHash =null;
		try {
			MessageDigest md = MessageDigest.getInstance("MD5");
			md.update(link.getBytes());
		    byte[] digest = md.digest();
//		    ByteBuffer bf = ByteBuffer.wrap(digest);
//		    int num = bf.getInt();
//		    System.out.println(num);
//		    String ha = String.valueOf(num);
//		    System.out.println(ha);
		    
		    
		    hash = DatatypeConverter.printHexBinary(digest);
		    
		    for(int i = 0; i< hash.length(); i = i + 4) {
		    	String quad = hash.substring(i, i+4);
		    	//int value = Integer.parseInt(quad, 16);
		    	System.out.println(quad);
		    	if(dictionary.containsKey(quad)) {
		    		newHash = newHash + dictionary.get(quad);
		    	} else {
		    		String unique = this.getUniqueValue(quad);
		    		dictionary.put(quad, unique);
		    		newHash = newHash + dictionary.get(quad);
		    	}	
		    }
		    System.out.println(newHash);
		} catch (NoSuchAlgorithmException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		return hash;
	}

}
